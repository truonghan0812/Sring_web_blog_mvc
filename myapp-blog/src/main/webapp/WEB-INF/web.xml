

<web-app
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns="http://java.sun.com/xml/ns/javaee" 
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
    version="2.5">
  <display-name>Archetype Created Web Application</display-name>
  <welcome-file-list>
  	<welcome-file>index.html</welcome-file>
  </welcome-file-list>
   
  
  <!-- Processes application requests -->
	<servlet>
		<servlet-name>WebAppServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	  <servlet-mapping>
	  	<servlet-name>WebAppServlet</servlet-name>
	  	<url-pattern>*.html</url-pattern>
	  </servlet-mapping>
	  
	  
	  <!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	  <!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
  	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/application-context.xml</param-value>
	</context-param>
	
	<!-- Use entity manager out of the DAO layer without lazy loading exception 	-->
	
	<!-- <filter>
		<filter-name>entityManagerInView</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
		<init-param>
			<param-name>entityManagerFactoryBeanName</param-name>
			References to back end context emf
			<param-value>entityManagerFactory</param-value>
		</init-param>
	</filter> 
	 
	
	<filter-mapping>
		<filter-name>entityManagerInView</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->
 	<!-- Spring Security -->
 	<filter>
  <filter-name>springSecurityFilterChain</filter-name>
  <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
</filter>

<filter-mapping>
  <filter-name>springSecurityFilterChain</filter-name>
  <url-pattern>/*</url-pattern>
</filter-mapping>
</web-app>
